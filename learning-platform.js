// –û–±—É—á–∞—é—â–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏ –∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ "–¢–µ–º–∞" –∏ "–í—ã–π—Ç–∏"
class LearningPlatform {
  constructor() {
    this.currentCourse = null;
    this.currentLesson = 0;
    this.courses = {
      html: this.createHTMLCourse(),
      css: this.createCSSCourse(),
      js: this.createJSCourse(),
      python: this.createPythonCourse()
    };
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  init() {
    this.renderPlatform();
    this.bindEvents();
  }

  // –®–∞–ø–∫–∞ + —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
  renderPlatform() {
    const username = this.getCurrentUsername();
    const platformHTML = `
      <div class="platform-header">
        <div class="header-left">
          <h1>üöÄ Survival Code Academy</h1>
          <p>–ò–∑—É—á–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω—É–ª—è ‚Äî —à–∞–≥ –∑–∞ —à–∞–≥–æ–º</p>
        </div>
        <div class="header-actions">
          <button class="btn secondary" id="toggle-theme" title="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É">üåô –¢–µ–º–∞</button>
          <button class="btn secondary" id="logout" title="–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞">üö™ –í—ã–π—Ç–∏</button>
        </div>
      </div>

      <div class="course-grid">
        <div class="course-card html" data-course="html">
          <div class="course-icon">üåê</div>
          <h3>HTML Basics</h3>
          <p>–û—Å–Ω–æ–≤—ã —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü</p>
          <p><strong>10 —É—Ä–æ–∫–æ–≤</strong></p>
        </div>

        <div class="course-card css" data-course="css">
          <div class="course-icon">üé®</div>
          <h3>CSS Styling</h3>
          <p>–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∏ –º–∞–∫–µ—Ç—ã</p>
          <p><strong>8 —É—Ä–æ–∫–æ–≤</strong></p>
        </div>

        <div class="course-card js" data-course="js">
          <div class="course-icon">‚ö°</div>
          <h3>JavaScript</h3>
          <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –ª–æ–≥–∏–∫–∞</p>
          <p><strong>12 —É—Ä–æ–∫–æ–≤</strong></p>
        </div>

        <div class="course-card python" data-course="python">
          <div class="course-icon">üêç</div>
          <h3>Python</h3>
          <p>–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —è–∑—ã–∫</p>
          <p><strong>15 —É—Ä–æ–∫–æ–≤</strong></p>
        </div>
      </div>

      <div id="lesson-container"></div>
    `;

    const root = document.getElementById('learning-platform');
    root.innerHTML = platformHTML;
  }

  bindEvents() {
    // –û–¥–∏–Ω –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç
    document.addEventListener('click', (e)=>{
      const card = e.target.closest('.course-card');
      if(card){
        const course = card.dataset.course;
        this.startCourse(course);
        return;
      }

      if(e.target.id === 'next-lesson'){ this.nextLesson(); return; }
      if(e.target.id === 'prev-lesson'){ this.prevLesson(); return; }
      if(e.target.id === 'back-to-courses'){ this.renderPlatform(); return; }

      if(e.target.id === 'toggle-theme'){
        document.body.classList.toggle('light-theme');
        const isLight = document.body.classList.contains('light-theme');
        localStorage.setItem('theme', isLight ? 'light' : 'dark');
        return;
      }

      if(e.target.id === 'logout'){
        localStorage.removeItem('sessionUser');
        document.getElementById('learning-platform').classList.add('hidden');
        document.getElementById('auth-container').classList.remove('hidden');
        return;
      }
    }, { passive: true });
  }

  getCurrentUsername(){
    const email = localStorage.getItem('sessionUser');
    if(!email) return '–ì–æ—Å—Ç—å';
    try {
      const users = JSON.parse(localStorage.getItem('users')||'{}');
      return users[email]?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    } catch(e){ return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'; }
  }

  startCourse(courseName){
    this.currentCourse = courseName;
    this.currentLesson = 0;
    this.renderLesson();
  }

  renderLesson(){
    const course = this.courses[this.currentCourse];
    const lesson = course.lessons[this.currentLesson];

    const lessonHTML = `
      <div class="lesson-content">
        <h2>${course.title} ‚Äî –£—Ä–æ–∫ ${this.currentLesson+1} –∏–∑ ${course.lessons.length}: ${lesson.title}</h2>
        <div class="lesson-text">${lesson.content}</div>
        ${lesson.example ? `<div class="code-editor">${lesson.example}</div>` : ''}
        <div class="navigation">
          <button class="btn secondary" id="back-to-courses">‚Üê –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º</button>
          <div>
            ${this.currentLesson>0 ? `<button class="btn secondary" id="prev-lesson">‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π</button>` : ''}
            <button class="btn primary" id="next-lesson">${this.currentLesson < course.lessons.length-1 ? '–°–ª–µ–¥—É—é—â–∏–π ‚Üí' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∫—É—Ä—Å'}</button>
          </div>
        </div>
      </div>
    `;
    document.getElementById('lesson-container').innerHTML = lessonHTML;
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  nextLesson(){
    const course = this.courses[this.currentCourse];
    if(this.currentLesson < course.lessons.length-1){
      this.currentLesson++;
      this.renderLesson();
    } else {
      this.renderPlatform();
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ—Å—Ç "–ö—É—Ä—Å –∑–∞–≤–µ—Ä—à—ë–Ω!"
    }
  }
  prevLesson(){
    if(this.currentLesson>0){ this.currentLesson--; this.renderLesson(); }
  }

  // ===== –ö–£–†–°–´ =====
  createHTMLCourse(){
    const lessons = [
      {
        title: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ HTML",
        content: "HTML ‚Äî —è–∑—ã–∫ —Ä–∞–∑–º–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ë—Ä–∞—É–∑–µ—Ä —á–∏—Ç–∞–µ—Ç —Ç–µ–≥–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç. –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (—Ç–µ–≥–æ–≤), —É –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–≥—É—Ç –±—ã—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã. –°–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ —á–∞—Å—Ç–∏ ‚Äî <strong>&lt;head&gt;</strong> –∏ <strong>&lt;body&gt;</strong>.",
        example: `<span class="code-comment">&lt;!-- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ --&gt;</span>
<span class="code-tag">&lt;!DOCTYPE html&gt;</span>
<span class="code-tag">&lt;html lang=<span class="code-value">"ru"</span>&gt;</span>
  <span class="code-tag">&lt;head&gt;</span>
    <span class="code-tag">&lt;meta</span> <span class="code-attribute">charset</span>=<span class="code-value">"UTF-8"</span><span class="code-tag">&gt;</span>
    <span class="code-tag">&lt;title&gt;</span>–ú–æ–π —Å–∞–π—Ç<span class="code-tag">&lt;/title&gt;</span>
  <span class="code-tag">&lt;/head&gt;</span>
  <span class="code-tag">&lt;body&gt;</span>
    <span class="code-tag">&lt;h1&gt;</span>–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!<span class="code-tag">&lt;/h1&gt;</span>
  <span class="code-tag">&lt;/body&gt;</span>
<span class="code-tag">&lt;/html&gt;</span>`
      },
      {
        title: "–ó–∞–≥–æ–ª–æ–≤–∫–∏, –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –∏ —Ç–µ–∫—Å—Ç",
        content: "–ó–∞–≥–æ–ª–æ–≤–∫–∏ <strong>&lt;h1&gt;...&lt;h6&gt;</strong> –∑–∞–¥–∞—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–µ–∫—Å—Ç–∞. –î–ª—è –∞–±–∑–∞—Ü–µ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è <strong>&lt;p&gt;</strong>. –ñ–∏—Ä–Ω—ã–π –∏ –∫—É—Ä—Å–∏–≤ ‚Äî <strong>&lt;strong&gt;</strong> –∏ <strong>&lt;em&gt;</strong>.",
        example: `<span class="code-tag">&lt;h1&gt;</span>–ì–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞<span class="code-tag">&lt;/h1&gt;</span>
<span class="code-tag">&lt;h2&gt;</span>–ü–æ–¥—Ä–∞–∑–¥–µ–ª<span class="code-tag">&lt;/h2&gt;</span>
<span class="code-tag">&lt;p&gt;</span>–≠—Ç–æ –æ–±—ã—á–Ω—ã–π –∞–±–∑–∞—Ü —Ç–µ–∫—Å—Ç–∞ —Å <span class="code-tag">&lt;strong&gt;</span>–≤–∞–∂–Ω—ã–º<span class="code-tag">&lt;/strong&gt;</span> —Å–ª–æ–≤–æ–º –∏ <span class="code-tag">&lt;em&gt;</span>–∞–∫—Ü–µ–Ω—Ç–æ–º<span class="code-tag">&lt;/em&gt;</span>.<span class="code-tag">&lt;/p&gt;</span>`
      },
      {
        title: "–°–ø–∏—Å–∫–∏ –∏ —Ü–∏—Ç–∞—Ç—ã",
        content: "–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ ‚Äî <strong>&lt;ul&gt;</strong>, –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ ‚Äî <strong>&lt;ol&gt;</strong>, —ç–ª–µ–º–µ–Ω—Ç—ã ‚Äî <strong>&lt;li&gt;</strong>. –î–ª—è —Ü–∏—Ç–∞—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è <strong>&lt;blockquote&gt;</strong>.",
        example: `<span class="code-tag">&lt;ul&gt;</span>
  <span class="code-tag">&lt;li&gt;</span>–Ø–±–ª–æ–∫–∏<span class="code-tag">&lt;/li&gt;</span>
  <span class="code-tag">&lt;li&gt;</span>–ì—Ä—É—à–∏<span class="code-tag">&lt;/li&gt;</span>
<span class="code-tag">&lt;/ul&gt;</span>

<span class="code-tag">&lt;ol&gt;</span>
  <span class="code-tag">&lt;li&gt;</span>–®–∞–≥ –æ–¥–∏–Ω<span class="code-tag">&lt;/li&gt;</span>
  <span class="code-tag">&lt;li&gt;</span>–®–∞–≥ –¥–≤–∞<span class="code-tag">&lt;/li&gt;</span>
<span class="code-tag">&lt;/ol&gt;</span>

<span class="code-tag">&lt;blockquote&gt;</span>–¶–∏—Ç–∞—Ç–∞ –¥–Ω—è<span class="code-tag">&lt;/blockquote&gt;</span>`
      },
      {
        title: "–°—Å—ã–ª–∫–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è",
        content: "–°—Å—ã–ª–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ç–µ–≥–æ–º <strong>&lt;a href=\"...\"&gt;</strong>. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî <strong>&lt;img src=\"...\" alt=\"...\"&gt;</strong>. –ê—Ç—Ä–∏–±—É—Ç <strong>alt</strong> –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.",
        example: `<span class="code-tag">&lt;a</span> <span class="code-attribute">href</span>=<span class="code-value">"https://developer.mozilla.org"</span><span class="code-tag">&gt;</span>MDN<span class="code-tag">&lt;/a&gt;</span>
<span class="code-tag">&lt;img</span> <span class="code-attribute">src</span>=<span class="code-value">"cat.jpg"</span> <span class="code-attribute">alt</span>=<span class="code-value">"–ö–æ—Ç–∏–∫"</span><span class="code-tag">&gt;</span>`
      },
      {
        title: "–ê—Ç—Ä–∏–±—É—Ç—ã, –∫–ª–∞—Å—Å—ã –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã",
        content: "–õ—é–±–æ–π —Ç–µ–≥ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã. –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è <strong>class</strong> –∏ <strong>id</strong> –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤.",
        example: `<span class="code-tag">&lt;div</span> <span class="code-attribute">class</span>=<span class="code-value">"card highlight"</span> <span class="code-attribute">id</span>=<span class="code-value">"promo"</span><span class="code-tag">&gt;</span>–ö–æ–Ω—Ç–µ–Ω—Ç<span class="code-tag">&lt;/div&gt;</span>`
      },
      {
        title: "–¢–∞–±–ª–∏—Ü—ã",
        content: "–¢–∞–±–ª–∏—Ü–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ <strong>&lt;table&gt;</strong>, —Å—Ç—Ä–æ–∫ <strong>&lt;tr&gt;</strong>, –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ <strong>&lt;th&gt;</strong> –∏ —è—á–µ–µ–∫ <strong>&lt;td&gt;</strong>.",
        example: `<span class="code-tag">&lt;table&gt;</span>
  <span class="code-tag">&lt;tr&gt;</span><span class="code-tag">&lt;th&gt;</span>–ò–º—è<span class="code-tag">&lt;/th&gt;</span><span class="code-tag">&lt;th&gt;</span>–í–æ–∑—Ä–∞—Å—Ç<span class="code-tag">&lt;/th&gt;</span><span class="code-tag">&lt;/tr&gt;</span>
  <span class="code-tag">&lt;tr&gt;</span><span class="code-tag">&lt;td&gt;</span>–ê–Ω–Ω–∞<span class="code-tag">&lt;/td&gt;</span><span class="code-tag">&lt;td&gt;</span>22<span class="code-tag">&lt;/td&gt;</span><span class="code-tag">&lt;/tr&gt;</span>
<span class="code-tag">&lt;/table&gt;</span>`
      },
      {
        title: "–§–æ—Ä–º—ã",
        content: "–§–æ—Ä–º—ã —Å–æ–±–∏—Ä–∞—é—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <strong>&lt;form&gt;</strong>, –ø–æ–ª—è <strong>&lt;input&gt;</strong>, <strong>&lt;textarea&gt;</strong>, <strong>&lt;select&gt;</strong>. –í–∞–∂–µ–Ω –∞—Ç—Ä–∏–±—É—Ç <strong>name</strong>.",
        example: `<span class="code-tag">&lt;form</span> <span class="code-attribute">action</span>=<span class="code-value">"/send"</span> <span class="code-attribute">method</span>=<span class="code-value">"post"</span><span class="code-tag">&gt;</span>
  <span class="code-tag">&lt;input</span> <span class="code-attribute">type</span>=<span class="code-value">"text"</span> <span class="code-attribute">name</span>=<span class="code-value">"user"</span><span class="code-tag">&gt;</span>
  <span class="code-tag">&lt;button&gt;</span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å<span class="code-tag">&lt;/button&gt;</span>
<span class="code-tag">&lt;/form&gt;</span>`
      },
      {
        title: "–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞",
        content: "–¢–µ–≥–∏ <strong>&lt;header&gt;</strong>, <strong>&lt;nav&gt;</strong>, <strong>&lt;main&gt;</strong>, <strong>&lt;article&gt;</strong>, <strong>&lt;section&gt;</strong>, <strong>&lt;footer&gt;</strong> –¥–µ–ª–∞—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–Ω—è—Ç–Ω–æ–π –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞–º –∏ –∞—Å—Å–∏—Å—Ç–∏–≤–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º.",
        example: `<span class="code-tag">&lt;header&gt;</span>–®–∞–ø–∫–∞<span class="code-tag">&lt;/header&gt;</span>
<span class="code-tag">&lt;nav&gt;</span>–ú–µ–Ω—é<span class="code-tag">&lt;/nav&gt;</span>
<span class="code-tag">&lt;main&gt;</span>
  <span class="code-tag">&lt;article&gt;</span>–°—Ç–∞—Ç—å—è<span class="code-tag">&lt;/article&gt;</span>
<span class="code-tag">&lt;/main&gt;</span>
<span class="code-tag">&lt;footer&gt;</span>–ü–æ–¥–≤–∞–ª<span class="code-tag">&lt;/footer&gt;</span>`
      },
      {
        title: "–ú—É–ª—å—Ç–∏–º–µ–¥–∏–∞: –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ",
        content: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π HTML –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ –±–µ–∑ –ø–ª–∞–≥–∏–Ω–æ–≤: <strong>&lt;audio&gt;</strong> –∏ <strong>&lt;video&gt;</strong> —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º <strong>controls</strong>.",
        example: `<span class="code-tag">&lt;audio</span> <span class="code-attribute">controls</span><span class="code-tag">&gt;</span>
  <span class="code-tag">&lt;source</span> <span class="code-attribute">src</span>=<span class="code-value">"sound.mp3"</span> <span class="code-attribute">type</span>=<span class="code-value">"audio/mpeg"</span><span class="code-tag">&gt;</span>
<span class="code-tag">&lt;/audio&gt;</span>

<span class="code-tag">&lt;video</span> <span class="code-attribute">controls</span> <span class="code-attribute">width</span>=<span class="code-value">"320"</span><span class="code-tag">&gt;</span>
  <span class="code-tag">&lt;source</span> <span class="code-attribute">src</span>=<span class="code-value">"clip.mp4"</span> <span class="code-attribute">type</span>=<span class="code-value">"video/mp4"</span><span class="code-tag">&gt;</span>
<span class="code-tag">&lt;/video&gt;</span>`
      },
      {
        title: "–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ SEO-–æ—Å–Ω–æ–≤—ã",
        content: "–í–Ω—É—Ç—Ä–∏ <strong>&lt;head&gt;</strong> –∑–∞–¥–∞—é—Ç—Å—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: –∫–æ–¥–∏—Ä–æ–≤–∫–∞, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å, –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç SEO –∏ —à–∞—Ä–∏–Ω–≥—É.",
        example: `<span class="code-tag">&lt;head&gt;</span>
  <span class="code-tag">&lt;meta</span> <span class="code-attribute">name</span>=<span class="code-value">"viewport"</span> <span class="code-attribute">content</span>=<span class="code-value">"width=device-width, initial-scale=1"</span><span class="code-tag">&gt;</span>
  <span class="code-tag">&lt;meta</span> <span class="code-attribute">name</span>=<span class="code-value">"description"</span> <span class="code-attribute">content</span>=<span class="code-value">"–£—á–µ–±–Ω—ã–π —Å–∞–π—Ç"</span><span class="code-tag">&gt;</span>
<span class="code-tag">&lt;/head&gt;</span>`
      }
    ];
    return { title: "HTML Basics", lessons };
  }

  createCSSCourse(){
    const lessons = [
      {
        title: "–ß—Ç–æ —Ç–∞–∫–æ–µ CSS –∏ –∫–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å",
        content: "CSS –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ HTML. –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–µ–≤–æ–π —Ñ–∞–π–ª —á–µ—Ä–µ–∑ <strong>&lt;link rel=\"stylesheet\" href=\"...\"&gt;</strong> –∏–ª–∏ –∑–∞–¥–∞—ë–º —Å—Ç–∏–ª–∏ –≤ <strong>&lt;style&gt;</strong>.",
        example: `<span class="code-comment">/* –í head –¥–æ–∫—É–º–µ–Ω—Ç–∞ */</span>
<span class="code-tag">&lt;link</span> <span class="code-attribute">rel</span>=<span class="code-value">"stylesheet"</span> <span class="code-attribute">href</span>=<span class="code-value">"style.css"</span><span class="code-tag">&gt;</span>`
      },
      {
        title: "–°–µ–ª–µ–∫—Ç–æ—Ä—ã –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ—Å—Ç—å",
        content: "–°–µ–ª–µ–∫—Ç–æ—Ä—ã –≤—ã–±–∏—Ä–∞—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã: –ø–æ —Ç–µ–≥—É (<code>p</code>), –∫–ª–∞—Å—Å—É (<code>.card</code>), id (<code>#main</code>). –°–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ—Å—Ç—å —Ä–µ—à–∞–µ—Ç, —á–µ–π —Å—Ç–∏–ª—å –ø–æ–±–µ–¥–∏—Ç.",
        example: `<span class="css-selector">p</span> { <span class="code-attribute">color</span>: <span class="code-value">#333</span>; }
<span class="css-selector">.card</span> { <span class="code-attribute">padding</span>: <span class="code-value">12px</span>; }
<span class="css-selector">#main</span> { <span class="code-attribute">border</span>: <span class="code-value">1px solid #ccc</span>; }`
      },
      {
        title: "–¶–≤–µ—Ç–∞, —à—Ä–∏—Ñ—Ç—ã, –æ—Ç—Å—Ç—É–ø—ã",
        content: "–û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç—Å—Ç—É–ø–æ–≤: <code>color</code>, <code>font-family</code>, <code>margin</code>, <code>padding</code>, <code>border</code>.",
        example: `<span class="css-selector">body</span> {
  <span class="code-attribute">font-family</span>: Arial, sans-serif;
  <span class="code-attribute">color</span>: <span class="code-value">#222</span>;
  <span class="code-attribute">margin</span>: <span class="code-value">0</span>;
  <span class="code-attribute">padding</span>: <span class="code-value">20px</span>;
}`
      },
      {
        title: "–ë–ª–æ—á–Ω–∞—è –º–æ–¥–µ–ª—å –∏ display",
        content: "–ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–æ —Å–≤–æ–µ–π –º–æ–¥–µ–ª—å—é (content, padding, border, margin). –°–≤–æ–π—Å—Ç–≤–æ <code>display</code> —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–∏–ø–æ–º –ø–æ–≤–µ–¥–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞.",
        example: `<span class="css-selector">.box</span> {
  <span class="code-attribute">display</span>: <span class="code-value">inline-block</span>;
  <span class="code-attribute">width</span>: <span class="code-value">120px</span>;
  <span class="code-attribute">padding</span>: <span class="code-value">10px</span>;
  <span class="code-attribute">border</span>: <span class="code-value">1px solid #999</span>;
}`
      },
      {
        title: "Flexbox ‚Äî –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∏ —Ä–∞—Å–∫–ª–∞–¥–∫–∏",
        content: "Flexbox —É–ø—Ä–æ—â–∞–µ—Ç –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –æ—Å—è–º –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.",
        example: `<span class="css-selector">.row</span> {
  <span class="code-attribute">display</span>: <span class="code-value">flex</span>;
  <span class="code-attribute">gap</span>: <span class="code-value">12px</span>;
  <span class="code-attribute">justify-content</span>: <span class="code-value">space-between</span>;
  <span class="code-attribute">align-items</span>: <span class="code-value">center</span>;
}`
      },
      {
        title: "Grid ‚Äî –º–æ—â–Ω—ã–µ —Å–µ—Ç–∫–∏",
        content: "CSS Grid —Å–æ–∑–¥–∞—ë—Ç –¥–≤—É–º–µ—Ä–Ω—ã–µ —Å–µ—Ç–∫–∏ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –º–∞–∫–µ—Ç–æ–≤.",
        example: `<span class="css-selector">.grid</span> {
  <span class="code-attribute">display</span>: <span class="code-value">grid</span>;
  <span class="code-attribute">grid-template-columns</span>: <span class="code-value">repeat(3, 1fr)</span>;
  <span class="code-attribute">gap</span>: <span class="code-value">10px</span>;
}`
      },
      {
        title: "–ü—Å–µ–≤–¥–æ–∫–ª–∞—Å—Å—ã –∏ –ø—Å–µ–≤–¥–æ—ç–ª–µ–º–µ–Ω—Ç—ã",
        content: "–ü—Å–µ–≤–¥–æ–∫–ª–∞—Å—Å—ã –æ–ø–∏—Å—ã–≤–∞—é—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ (<code>:hover</code>, <code>:focus</code>), –ø—Å–µ–≤–¥–æ—ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (<code>::before</code>, <code>::after</code>).",
        example: `<span class="css-selector">a:hover</span> { <span class="code-attribute">text-decoration</span>: <span class="code-value">underline</span>; }
<span class="css-selector">.badge::before</span> { <span class="code-attribute">content</span>: <span class="code-value">"‚òÖ"</span>; }`
      },
      {
        title: "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å: –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å—ã",
        content: "–ú–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –º–µ–Ω—è—Ç—å —Å—Ç–∏–ª–∏ –ø–æ–¥ —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞.",
        example: `<span class="code-comment">/* –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è */</span>
@media (max-width: 600px) {
  <span class="css-selector">.sidebar</span>{ <span class="code-attribute">display</span>: <span class="code-value">none</span>; }
}`
      }
    ];
    return { title: "CSS Styling", lessons };
  }

  createJSCourse(){
    const lessons = [
      {
        title: "–í–≤–µ–¥–µ–Ω–∏–µ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ",
        content: "JavaScript –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –°–∫—Ä–∏–ø—Ç –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—å –≤ –∫–æ–Ω—Ü–µ <strong>&lt;body&gt;</strong> –∏–ª–∏ —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º <strong>defer</strong> –≤ <strong>&lt;head&gt;</strong>.",
        example: `<span class="code-tag">&lt;script</span> <span class="code-attribute">src</span>=<span class="code-value">"app.js"</span> <span class="code-attribute">defer</span><span class="code-tag">&gt;&lt;/script&gt;</span>`
      },
      {
        title: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã",
        content: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ <code>let</code>, <code>const</code>. –¢–∏–ø—ã: —á–∏—Å–ª–æ, —Å—Ç—Ä–æ–∫–∞, –±—É–ª–µ–≤–æ, –æ–±—ä–µ–∫—Ç, –º–∞—Å—Å–∏–≤, null, undefined.",
        example: `<span class="js-keyword">const</span> name = <span class="code-value">'–ò—Ä–∞'</span>;
<span class="js-keyword">let</span> age = <span class="code-value">20</span>;
<span class="js-keyword">const</span> isStudent = <span class="code-value">true</span>;`
      },
      {
        title: "–û–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
        content: "–°–ª–æ–∂–µ–Ω–∏–µ, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏. –°—Ç—Ä–æ–≥–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ ‚Äî <code>===</code>.",
        example: `<span class="js-keyword">const</span> ok = <span class="code-value">2</span> + <span class="code-value">2</span> === <span class="code-value">4</span>;`
      },
      {
        title: "–£—Å–ª–æ–≤–∏—è",
        content: "–í–µ—Ç–≤–ª–µ–Ω–∏—è —Å <code>if/else</code> –∏ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.",
        example: `<span class="js-keyword">const</span> score = <span class="code-value">75</span>;
<span class="js-keyword">if</span> (score &gt;= <span class="code-value">60</span>) {
  console.log(<span class="code-value">'–°–¥–∞–ª'</span>);
} <span class="js-keyword">else</span> {
  console.log(<span class="code-value">'–ù–µ —Å–¥–∞–ª'</span>);
}`
      },
      {
        title: "–¶–∏–∫–ª—ã",
        content: "–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –¥–µ–π—Å—Ç–≤–∏—è —Å <code>for</code>, <code>while</code>, <code>for...of</code>.",
        example: `<span class="js-keyword">for</span> (<span class="js-keyword">let</span> i = <span class="code-value">0</span>; i &lt; <span class="code-value">3</span>; i++) {
  console.log(<span class="code-value">i</span>);
}`
      },
      {
        title: "–§—É–Ω–∫—Ü–∏–∏",
        content: "–§—É–Ω–∫—Ü–∏–∏ ‚Äî –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞. –ï—Å—Ç—å –æ–±—ã—á–Ω—ã–µ –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.",
        example: `<span class="js-keyword">function</span> sum(a, b){ <span class="js-keyword">return</span> a + b; }
<span class="js-keyword">const</span> mult = (a,b) =&gt; a * b;`
      },
      {
        title: "–ú–∞—Å—Å–∏–≤—ã –∏ –æ–±—ä–µ–∫—Ç—ã",
        content: "–ú–∞—Å—Å–∏–≤ ‚Äî —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫, –æ–±—ä–µ–∫—Ç ‚Äî –Ω–∞–±–æ—Ä –ø–∞—Ä –∫–ª—é—á/–∑–Ω–∞—á–µ–Ω–∏–µ.",
        example: `<span class="js-keyword">const</span> arr = [<span class="code-value">1</span>,<span class="code-value">2</span>,<span class="code-value">3</span>];
<span class="js-keyword">const</span> user = { name: <span class="code-value">'–ê–Ω—Ç–æ–Ω'</span>, age: <span class="code-value">21</span> };`
      },
      {
        title: "–ú–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤",
        content: "–ü–æ–ª–µ–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã: <code>push</code>, <code>map</code>, <code>filter</code>, <code>find</code>, <code>reduce</code>.",
        example: `<span class="js-keyword">const</span> nums = [<span class="code-value">1</span>,<span class="code-value">2</span>,<span class="code-value">3</span>];
nums.map(x =&gt; x * <span class="code-value">2</span>); <span class="code-comment">// [2,4,6]</span>`
      },
      {
        title: "DOM: –ø–æ–∏—Å–∫ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤",
        content: "–ß–µ—Ä–µ–∑ DOM –º—ã –∏–∑–º–µ–Ω—è–µ–º HTML. –ú–µ—Ç–æ–¥—ã: <code>querySelector</code>, <code>createElement</code>, <code>append</code>.",
        example: `document.querySelector(<span class="code-value">'#box'</span>).textContent = <span class="code-value">'–ü—Ä–∏–≤–µ—Ç!'</span>;`
      },
      {
        title: "–°–æ–±—ã—Ç–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏",
        content: "–°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏ —Ä–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
        example: `document.getElementById(<span class="code-value">'btn'</span>).addEventListener(<span class="code-value">'click'</span>, () =&gt; {
  alert(<span class="code-value">'–ù–∞–∂–∞—Ç–æ!'</span>);
});`
      },
      {
        title: "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å: setTimeout –∏ Promise",
        content: "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É. <code>Promise</code> –∏ <code>async/await</code> —É–ø—Ä–æ—â–∞—é—Ç —Ä–∞–±–æ—Ç—É.",
        example: `<span class="js-keyword">const</span> delay = (ms) =&gt; <span class="js-keyword">new</span> Promise(r =&gt; setTimeout(r, ms));
(<span class="js-keyword">async</span> () =&gt; {
  <span class="js-keyword">await</span> delay(<span class="code-value">500</span>);
  console.log(<span class="code-value">'–ü—Ä–æ—à–ª–æ 0.5—Å'</span>);
})();`
      },
      {
        title: "–†–∞–±–æ—Ç–∞ —Å API: fetch",
        content: "–ó–∞–ø—Ä–æ—Å—ã –∫ —Å–µ—Ä–≤–µ—Ä—É –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —á–µ—Ä–µ–∑ <code>fetch</code>.",
        example: `<span class="js-keyword">async</span> function load(){
  <span class="js-keyword">const</span> res = <span class="js-keyword">await</span> fetch(<span class="code-value">'https://jsonplaceholder.typicode.com/todos/1'</span>);
  <span class="js-keyword">const</span> data = <span class="js-keyword">await</span> res.json();
  console.log(data);
}`
      },
      {
        title: "–ü—Ä–∞–∫—Ç–∏–∫–∞: –º–∏–Ω–∏‚ÄëTODO",
        content: "–°–æ–±–µ—Ä—ë–º —Å–ø–∏—Å–æ–∫ –¥–µ–ª: –≤–≤–æ–¥, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤ –∏ –≤—ã–≤–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.",
        example: `<span class="js-keyword">let</span> todos = [];
<span class="js-keyword">function</span> addTodo(text){
  todos.push({ text, done: <span class="code-value">false</span> });
}`
      }
    ];
    return { title: "JavaScript", lessons };
  }

  createPythonCourse(){
    const lessons = [
      { title: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫", content: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.x. –í –∫–æ–Ω—Å–æ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>python</code> –∏–ª–∏ <code>python3</code>. –§–∞–π–ª—ã –∏–º–µ—é—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ <code>.py</code>.", example: `<span class="code-comment"># –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏</span>
<span class="python-keyword">import</span> sys
<span class="python-keyword">print</span>(sys.version)` },
      { title: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã", content: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø—Ä–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏. –¢–∏–ø—ã: int, float, str, bool.", example: `name = <span class="code-value">"–ê–Ω–Ω–∞"</span>
age = <span class="code-value">23</span>
pi = <span class="code-value">3.14</span>
is_ok = <span class="code-value">True</span>` },
      { title: "–í–≤–æ–¥/–≤—ã–≤–æ–¥", content: "–í—ã–≤–æ–¥ ‚Äî —Ñ—É–Ω–∫—Ü–∏–µ–π <code>print</code>, –≤–≤–æ–¥ ‚Äî <code>input</code> (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É).", example: `<span class="python-keyword">print</span>(<span class="code-value">"–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?"</span>)
name = input()
<span class="python-keyword">print</span>(<span class="code-value">f"–ü—Ä–∏–≤–µ—Ç, {name}!"</span>)` },
      { title: "–û–ø–µ—Ä–∞—Ç–æ—Ä—ã", content: "–ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –ª–æ–≥–∏–∫–∞. –î–µ–ª–µ–Ω–∏–µ <code>/</code> ‚Äî float, <code>//</code> ‚Äî —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ.", example: `a = <span class="code-value">7</span>
b = <span class="code-value">3</span>
<span class="python-keyword">print</span>(a / b, a // b, a ** b)` },
      { title: "–£—Å–ª–æ–≤–∏—è if/elif/else", content: "–í–µ—Ç–≤–ª–µ–Ω–∏—è –ø–æ —É—Å–ª–æ–≤–∏—è–º. –í–∞–∂–Ω—ã –æ—Ç—Å—Ç—É–ø—ã (4 –ø—Ä–æ–±–µ–ª–∞).", example: `score = <span class="code-value">72</span>
<span class="python-keyword">if</span> score &gt;= <span class="code-value">60</span>:
    <span class="python-keyword">print</span>(<span class="code-value">"–°–¥–∞–ª"</span>)
<span class="python-keyword">else</span>:
    <span class="python-keyword">print</span>(<span class="code-value">"–ù–µ —Å–¥–∞–ª"</span>)` },
      { title: "–¶–∏–∫–ª—ã for –∏ while", content: "–¶–∏–∫–ª—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç –¥–µ–π—Å—Ç–≤–∏—è. <code>for</code> –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏, <code>while</code> ‚Äî –ø–æ–∫–∞ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ.", example: `<span class="python-keyword">for</span> i <span class="python-keyword">in</span> range(<span class="code-value">3</span>):
    <span class="python-keyword">print</span>(i)` },
      { title: "–°–ø–∏—Å–∫–∏", content: "–°–ø–∏—Å–æ–∫ ‚Äî –∏–∑–º–µ–Ω—è–µ–º–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.", example: `nums = [<span class="code-value">1</span>,<span class="code-value">2</span>,<span class="code-value">3</span>]
nums.append(<span class="code-value">4</span>)
<span class="python-keyword">print</span>(nums)` },
      { title: "–ö–æ—Ä—Ç–µ–∂–∏ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞", content: "–ö–æ—Ä—Ç–µ–∂ ‚Äî –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å. –ú–Ω–æ–∂–µ—Å—Ç–≤–æ ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ –ø–æ—Ä—è–¥–∫–∞.", example: `t = (<span class="code-value">1</span>, <span class="code-value">2</span>)
s = {<span class="code-value">1</span>, <span class="code-value">2</span>, <span class="code-value">2</span>}
<span class="python-keyword">print</span>(t, s)` },
      { title: "–°–ª–æ–≤–∞—Ä–∏", content: "–°–ª–æ–≤–∞—Ä—å ‚Äî –ø–∞—Ä—ã –∫–ª—é—á/–∑–Ω–∞—á–µ–Ω–∏–µ.", example: `user = {<span class="code-value">"name"</span>: <span class="code-value">"–ò–≥–æ—Ä—å"</span>, <span class="code-value">"age"</span>: <span class="code-value">20</span>}
<span class="python-keyword">print</span>(user[<span class="code-value">"name"</span>])` },
      { title: "–§—É–Ω–∫—Ü–∏–∏", content: "–§—É–Ω–∫—Ü–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥. –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ <code>return</code>.", example: `<span class="python-keyword">def</span> area(w, h):
    <span class="python-keyword">return</span> w * h

<span class="python-keyword">print</span>(area(<span class="code-value">3</span>, <span class="code-value">5</span>))` },
      { title: "–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏", content: "–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ <code>with open</code> ‚Äî —Ç–∞–∫ –æ–Ω –∑–∞–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.", example: `<span class="python-keyword">with</span> open(<span class="code-value">"data.txt"</span>, <span class="code-value">"w"</span>, encoding=<span class="code-value">"utf-8"</span>) <span class="python-keyword">as</span> f:
    f.write(<span class="code-value">"–ü—Ä–∏–≤–µ—Ç"</span>)` },
      { title: "–ò—Å–∫–ª—é—á–µ–Ω–∏—è (try/except)", content: "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –ø–∞–¥–∞–ª–∞.", example: `<span class="python-keyword">try</span>:
    x = <span class="code-value">1</span> / <span class="code-value">0</span>
<span class="python-keyword">except</span> ZeroDivisionError:
    <span class="python-keyword">print</span>(<span class="code-value">"–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å"</span>)` },
      { title: "–ú–æ–¥—É–ª–∏ –∏ –ø–∞–∫–µ—Ç—ã", content: "–ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ —á—É–∂–æ–π –∏–ª–∏ —Å–≤–æ–π –∫–æ–¥ —á–µ—Ä–µ–∑ <code>import</code>.", example: `<span class="python-keyword">import</span> math
<span class="python-keyword">print</span>(math.sqrt(<span class="code-value">9</span>))` },
      { title: "–ö–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã (–û–û–ü)", content: "–ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç —à–∞–±–ª–æ–Ω, –æ–±—ä–µ–∫—Ç ‚Äî —ç–∫–∑–µ–º–ø–ª—è—Ä. –ú–µ—Ç–æ–¥ <code>__init__</code> ‚Äî –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.", example: `<span class="python-keyword">class</span> Person:
    <span class="python-keyword">def</span> __init__(self, name):
        self.name = name
    <span class="python-keyword">def</span> hello(self):
        <span class="python-keyword">print</span>(<span class="code-value">f"–ü—Ä–∏–≤–µ—Ç, {self.name}"</span>)

p = Person(<span class="code-value">"–û–ª—è"</span>)
p.hello()` },
      { title: "–ü—Ä–∞–∫—Ç–∏–∫–∞: –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", content: "–†–µ–∞–ª–∏–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ —Å–ª–æ–∂–µ–Ω–∏—è/–≤—ã—á–∏—Ç–∞–Ω–∏—è/—É–º–Ω–æ–∂–µ–Ω–∏—è/–¥–µ–ª–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫.", example: `<span class="python-keyword">def</span> calc(a, b, op):
    <span class="python-keyword">if</span> op == <span class="code-value">"+"</span>: <span class="python-keyword">return</span> a + b
    <span class="python-keyword">elif</span> op == <span class="code-value">"-"</span>: <span class="python-keyword">return</span> a - b
    <span class="python-keyword">elif</span> op == <span class="code-value">"*"</span>: <span class="python-keyword">return</span> a * b
    <span class="python-keyword">elif</span> op == <span class="code-value">"/"</span>:
        <span class="python-keyword">return</span> a / b <span class="code-comment"># –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 0</span>
    <span class="python-keyword">else</span>:
        <span class="python-keyword">return</span> <span class="code-value">None</span>` }
    ];
    return { title: "Python", lessons };
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –µ–¥–∏–Ω–æ–∂–¥—ã
window.learningPlatformInstance = new LearningPlatform();
